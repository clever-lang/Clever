/*
* This is the basic flow for fcgi apps in clever 
*/
import std.io.*;
import std.fcgi.*;

/*
* @proto Server.new()
*	use spawn-server -p TCPPORT /path/to/clever/bin /path/to/this/script
*	set your webserver to use TCPPORT, nginx for example 127.0.0.1:TCPPORT
*/
var server = Server.new();

while(server.accept()) {
	/*
	* Clever :)
	*/
	var params = server.getParams();
	var headers = server.getHeaders();
	var cookies = server.getCookies();
	var server = server.getEnvironment();
	
	/*
	* @TODO(krakjoe) 
	*	The plan is to implement setCookie/setHeader in userland
	*	We will assume that print() is writing the body
	*	The first time the user calls print we will generate a header
	*/
	server.print("Set-Cookie: session=myid; path=/;\n");
	server.print("Content-Type: text/html\n");
	server.print("\n");
	server.print(
		"<html>\n",
		"<head>\n",
		"</head>\n",
		"<body>\n"
	);
	server.print(String.format("Welcome to the clever demo on \1<br/>\n", server.getHeader("HOST")));
	server.print(String.format("You are visiting from \1:p\2<br/>\n", server.getEnvironment("REMOTE_ADDR"), server.getEnvironment("REMOTE_PORT")));
	server.print(String.format("We are serving you from \1:\2<br/>\n", server.getEnvironment("SERVER_ADDR"), server.getEnvironment("SERVER_PORT")));
	server.print("<pre>\n");
	server.print(String.format("PARAMS[\1]\n", params));
	server.print(String.format("HEADERS[\1]\n", headers));
	server.print(String.format("COOKIES[\1]\n", cookies));
	server.print(String.format("SERVER[\1]\n", server));
	server.print("</pre>");
	server.print(
		"</body>\n",
		"</html>\n"
	);
	server.debug();
	server.finish();
}

server.finish();
